#!/bin/bash
os=`uname|cut -c1-6` 
if [ -n "${USER:-x}" ] ; then export USER=$LOGNAME ; fi
if [ $os == "CYGWIN" ] ; then
  alias dsktop='pushd /cygdrive/c/Documents\ and\ Settings/hon/Desktop/'
  alias javac='/cygdrive/c/Program\ Files/Java/jdk1.6.0_17/bin/javac.exe'
  alias java='/cygdrive/c/Program\ Files/Java/jdk1.6.0_17/bin/java.exe'
fi
#
# uf icbr:
# note (if dns is not available) time.nist.gov and time-a time-b time-c are:
# 216.229.0.179 129.6.15.28 129.6.15.29 129.6.15.30
alias delltag='dmidecode -s system-serial-number'
#alias cloudbr0route='route add -net 10.101.11.0 netmask 255.255.255.0 gw 172.18.11.75 cloudbr0'
alias cldstat='service cloudstack-agent status | tail -1 ; service cloudstack-management status | tail -1; chkconfig --list | grep cloudstack'
alias cldastart='service cloudstack-agent start'
alias cldastop='service cloudstack-agent stop ; chkconfig cloudstack-agent off'
alias cldmstart='service cloudstack-management start'
alias cldmstop='service cloudstack-management stop ; chkconfig cloudstack-management off'
alias cldstart='service cloudstack-agent start ; service cloudstack-management start'
alias cldstop='service cloudstack-agent stop ; chkconfig cloudstack-agent off ; service cloudstack-management stop ; chkconfig cloudstack-management off'
alias dbsslrm='mysql -u cloud -D cloud -p -e "delete from configuration where name = ssl.keystore ;"'
alias br0route='route add -net 172.17.8.0 netmask 255.255.255.0 gw 10.101.8.94 br0'
alias xclock='xclock -d -title c8-14 -update 1 &'
alias kssh='kswitch -p david.hon@ICBR.LOCAL && \ssh -Y'
alias usepy2='\pushd /home/hon && source py2env/bin/activate ; popd'
alias vmac="hexdump -vn3 -e '/3 \"52:54:00\"' -e '/1 \":%02x\"' -e '\"\n\"' /dev/urandom"
alias iptabls='\iptables -nL'
alias tcpstat='netstat -np --tcp'
alias socstat='netstat -atulnp'
alias ifcloud='ifconfig|grep -A 1 cloud && ip addr|grep cloud'
alias ping='ping -c 1 -t 1'
alias csinfo='cloudmonkey list zones && cloudmonkey list pods && cloudmonkey list clusters && cloudmonkey list hosts'
alias kvmstat='netstat -alntp | grep libvirtd && lsmod | grep kvm'
alias kscp='kswitch -p david.hon@ICBR.LOCAL && scp -pr' 
alias kini='kinit ${USER}@ICBR.LOCAL && kswitch -p ${USER}@ICBR.LOCAL && klist -l'
alias mkpy='./configure --prefix=/opt --enable-shared --with-signal-module --with-fpectl --with-threads --with-ensurepip=install && make'
alias idate='date && date -u && nc -w 1 time.nist.gov 13'
alias utc='nc -w 1 time.nist.gov 13'
# icbr cloudstack
alias fndvirt='for d in `find / -type d -name libvirt | egrep -v "backup|vagrant|home|log"` ; do grep -R "192.168" $d; done'
alias bootconf='chkconfig --list|egrep -i "aud|cloud|iptab|virt|dnsm|mysq|network|nscd|ntp|nfs|bind|tomc"'
#alias srvstat='service --status-all|egrep "cloud|virt|dnsm|mysq|ntp|nfs|bind|tomc"'
alias cstat='service iptables status ; service sshd status ; service nfs status ; service libvirtd status ; service cloudstack-management status ; service cloudstack-agent status ; df'
alias csysvm='pushd /usr/share/cloudstack-common/vms && \ls -l *.iso* && mv systemvm.iso.bak systemvm.iso && chown cloud:cloud * && chmod a+rwx *'
# cloudstack console proxy VM according to dashboard (virsh v-2-VM):
alias cldcons='ssh -i /root/.ssh/id_rsa.cloud -p 3922 169.254.1.200' # link local
#alias cldcons='ssh -i /root/.ssh/id_rsa.cloud -p 3922 10.101.11.145' # private (managment) IP

# cloudstack secondary storage VM (virsh s-1-VM):
alias cldstrg='ssh -i /root/.ssh/id_rsa.cloud -p 3922 169.254.1.56' # link local
#alias cldstrg='ssh -i /root/.ssh/id_rsa.cloud -p 3922 10.101.11.147' # private (managment) IP

alias showroute='route -n'
alias mine='chown -R david.hon:uf-icbr-people-staff-david.hon'
alias unlock='chown -R cloud:cloud . && chmod -R ug+rw . && find . -type d -exec chmod a+x {} \;'
alias azero='truncate -s 0 [a-z]*'
alias netshow='ip addr show | grep -v link | cut -d':' -f2- | sort -u && brctl show && netstat -nr'
alias lskvm='\ls -l /var/lib/libvirt/images && virsh list'
alias infoyum='yum repolist && echo below are disabled ... && yum repolist disabled'
alias frcfsck='touch /forcefsck' # force fsck on reboot
alias remnt='mount -o remount, rw'
alias cblade='\ssh -Y c8-14.icbr.local' # be sure to kinit beforehand ...
alias boxupp='~/apr2016/gui_vagrant/boxupp/target/boxuppzipdir/bin/startup.sh'
alias pstack='ps -ef|egrep "nova|cinder|glance|keystone|httpd"'
alias csamba='ps -ef|egrep "nmb|smb|ctdb"'
#alias gitd2d='git clone /Volumes/uf-icbr/Organization/Virtual/Source\ Code\ Management/day-to-day/'
#alias isoimgs='pushd /Volumes/uf-icbr/Organization/Sections/Cyberinfrastructure/images'
#alias isowin81='/Volumes/uf-icbr/Organization/Sections/Cyberinfrastructure/images/SW_DVD5_SA_Win_Ent_8.1_64BIT_English_MLF_X18-96759.ISO'
#alias honpub='pushd /Volumes/uf-icbr/People/Staff/Public\ Folders/David\ Hon\ \(Public\)'
#alias hondrpbx='pushd /Volumes/uf-icbr/People/Staff/Drop\ Boxes/David\ Hon\ \(Drop\ Box\)'
# jeremy's data delivery share:
alias jdatdeliv='pushd /Volumes/uf-icbr/People/Staff/Public\ Folders/Jeremy\ Jensen\ \(Public\)/DataDelivery'
alias ldaps="ldapsearch -b 'ou=People,dc=ufl,dc=edu' -H ldaps://ldap.ufl.edu:636 -v -x"
alias macsys='/usr/sbin/system_profiler -detailLevel full SPHardwareDataType'
#
# virtualbox:
alias vls='vboxmanage list vms -l'
alias vlsr='vboxmanage list runningvms -l'
# note that adding nic2 requires "powered-off" VM (todo -- function version of alias with nic# and vmname args):
alias vaddnic2="vboxmanage modifyvm Win8.1Samba4 --nic2 hostonly --cableconnected2 on --nictype2 82540EM --hostonlyadapter2 'vboxnet0'"
alias vaddnic3="vboxmanage modifyvm Win8.1Samba4 --nic3 hostonly --cableconnected3 on --nictype2 82540EM --hostonlyadapter3 'vboxnet0'"
# vagrant:
alias vup='vagrant up --provider libvirt'
alias vrm='vagrant destroy'
alias vsusp='vagrant suspend'
alias vhalt='vagrant halt'
alias vssh='vagrant ssh'
alias tarapr='pushd ~/apr2016 ; tar zcvf mar06VMs.tgz VMs/{*sh,*md,*stack/*agrantfile*} ; popd'
#
alias hedt='seamonkey -editor'
alias ttyhis='script ~/ttyhis/`tty|sed "s/\///g"`'
alias nw=/opt/nwjs/nw
#
alias gitini='git clone'
alias gitags='git describe --tags `git rev-list --tags` | head'
alias gitci='git commit -a -m"more prose and/or code edits"; git push'
#alias git1='git clone --depth 1' ... see git1 func below
#
alias pdf='atrilx'
alias envnode='nodeenv --prebuilt'
alias ruby='ruby -rubygems'
alias py2venv='\virtualenv -p /opt/bin/python2.7 --clear --always-copy --prompt=py2env'
alias py3venv='\virtualenv -p /opt/bin/python3.5 --clear --always-copy --prompt=py3env'
#alias py3venv='/opt/bin/pyvenv-3.5 --copies --clear'
alias py2='python2.7 -uRO'
alias py3='python3.5 -uRO'
alias ipy='ipython --profile=sh'
alias vipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"
alias md2rst='pandoc --from=markdown --to=rst'
alias rst2md='pandoc --from=rst --to=markdown'
alias jake='jake -t'
alias hpscan200='scanimage -p --mode Color --resolution 200 --format=jpeg > scan200.jpg'
alias hpscan300='scanimage -p --mode Color --resolution 300 --format=jpeg > scan300.jpg'
alias hpscan600='scanimage -p --mode Color --resolution 600 --format=jpeg > scan600.jpg'
alias portstat='netstat -alnp|grep -i listen'
alias cp='cp -p'
alias cpa='cp -a [a-z]*'
alias cpr='cp -rp'
#alias jx=/opt/jxcore/jx236_ub64/jx
alias cosatm8='\ssh -Y hon@u17706582.onlinehome-server.com'
alias coscons='ssh -Y u77539905@sercon.onlinehome-server.com'
alias ubuatm8='\ssh -Y hon@u17724570.onlinehome-server.com'
alias ubucons='ssh -Y u77539877@sercon.onlinehome-server.com'
alias sudo='sudo -H'
# intel xdk for node-webkit
alias xdk='/opt/intel/XDK/xdk.sh \!* &'
#
# amd radeon gpu device driver config tool:
alias gpuinfo='aticonfig --odgt'
alias gpuini='aticonfig --initial --input=/etc/X11/xorg.conf'
# may need to install gnome-panel for iconapp: sudo apt-get install gnome-panel
alias iconapp='gnome-desktop-item-edit --create-new ~/Desktop'
# ubuntu 14 lts node-webkit:
alias nw='env LD_LIBRARY_PATH=/opt/node-webkit-v0.9.2-linux-x64:/usr/local /opt/node-webkit-v0.9.2-linux-x64/nw &'
alias rsnc='rsync -val --exclude=".svn" --exclude=".git"'
alias ubuec2='ssh -i ~/.ssh/ec2-ubuntu13.pem ubuntu@ec2-ubuntu13'
alias ubusnc='rsync -val --exclude=".svn" --exclude=".git" -e "ssh -i ~/.ssh/ec2-ubuntu13.pem"'
alias limb='ssh -i ~/.ssh/$USER-earthlimb.pem $USER@earthlimb.net'
alias aws='ssh -i ~/.ssh/$USER-aws.pem $USER@ec2-50-19-66-82.compute-1.amazonaws.com'
alias marslimb='ssh -Y $USER@marslimb.net'
alias earthlimb='ssh -Y $USER@earthlimb.net'
alias laspcld='ssh -i ~/.ssh/$USER-laspmaven.pem $USER@laspmaven'
alias soccld='ssh -i ~/.ssh/$USER-socmaven.pem $USER@socmaven'
alias ln='ln -s'
alias wget='wget --no-check-certificate'
alias portuse='nc -z localhost 1-65535'
alias mm='~/local/freemind-0.9.0_RC_4/freemind.sh'
alias rdinu='\rdesktop -a 24 -g 1600x1120 -x b -r sound:local inu.nodc.noaa.gov &'
alias dir='\ls -ahlqF'
#alias df='\df -i'
alias df='\df -h'
alias his='history|grep -i'
alias mkdir='\mkdir -p'
alias pd='\pushd'
alias ssh='\ssh -Y'
alias honsys='\ssh -Y hon@honsys.net'
alias smoky='\ssh -Y smoky'
alias gt5='gnome-terminal --tab --tab --tab --tab --tab &'
alias acro=/home/dhon/local/Adobe/Reader8/bin/acroread
alias fedadmin="${FEDORA_HOME}/client/bin/fedora-admin.sh &"
alias editx='pushd ~/local/editix-free-2009-raw/bin; sh run.sh &' 
alias apache88="$HOME/local/apache2/bin/httpd -f $HOME/local/apache2/conf/httpd.conf88"
alias apache99="$HOME/local/apache2/bin/httpd -f $HOME/local/apache2/conf/httpd.conf99"
#alias seamonkey=${HOME}/local/bin/seamonkey
#alias realplay=${HOME}/local/bin/realplay
alias usbls='lsusb; grep -i usb /proc/scsi/scsi'
alias jdate='date "+%Y:%j:%H:%M:%S"'
alias mkso_modpy='gcc -shared -z muldefs -z nodefs -L/home/dhon/local/lib  -L/home/dhon/local/apache/lib -o mod_python.so *.o -lpython2.6 -lapr-1'
alias jrun='java -cp ".:/home/dhon/local/lib/java/irnoaa.jar:/home/dhon/local/lib/java/xerces/xercesImpl.jar:/home/dhon/local/lib/java/log4j.jar"'
#
# list all aliases and funcs:
alias lal="alias|cut -d'=' -f1 ; declare -f|grep \("
#

# /etc mods with past 2 weeks:
alias etcmod='find /etc -type f -mtime -15 -print | grep -v lvm | sort'

# since bash alias lacks arg/param feature, define funcs:

function cldserv {
  act='d'
  read -p 'cloudstack-agent startup (u) or shutdown (d is default)? ' act 
  echo "act == $act"
  if [[ $act != u ]] ; then 
    act='stop'
    echo ok stopping cloudstack hypervisor agent and management service ... please be patient ...
  else 
    act='start'
    echo ok starting cloudstack hypervisor agent and management service
  fi
  echo $act agent ...
  service cloudstack-agent $act | tail -1 ; chkconfig cloudstack-agent off
  echo $act management service ...
  service cloudstack-management $act | tail -1 ; chkconfig cloudstack-management off

  service cloudstack-agent status ; chkconfig --list | grep agent
  service cloudstack-management status ; chkconfig --list | grep management
}

# more general system file mod list (default since last reboot):
function sysmod {
  sysdir='/etc'
  if [ $1 ] ; then sysdir="$1" ; fi
  days=`uptime|awk '{print $3}'`
  if [ $2 ] ; then days="$2" ; fi
  echo 'list all system (config.) files modified (default since last system (re)boot uptime) days: ' $days
  find ${sysdir} -mtime -${days} -type f -ls | grep -v lvm | sort -u
}

#alias dirt='\ls -alFqh --color=none --time-style=long-iso |/bin/grep "`date  --rfc-3339=date`"'
unalias dirt >& /dev/null
#
function dirt {
  \ls -alFqh --color=none --time-style=long-iso $*|/bin/grep "`date  --rfc-3339=date`"
}
#
#alias his='\history | \grep $*'
unalias his >& /dev/null
function his {
  \history | \grep $*
}
#
#alias edt='emacs -bg white -fg black -cr red -fn 9x15bold'
unalias edt >& /dev/null
function edt {
  \emacs -bg white -fg black -cr red -fn 9x15bold $* &
}
#
#

#alias rmkvm='virsh destroy && virsh undefine && virsh vol-delete'

function rmkvm {
  virsh list
  virsh destroy $1 && virsh undefine $1
  virsh pool-list && virsh vol-list default
  virsh vol-delete ${1}.img --pool default
  pool=`virsh pool-list|tail -2|awk '{print $1}'`
  echo assume pool == $pool should be deteled along with the VM image volume == ${1}.img
  virsh pool-destroy $pool
  virsh list && virsh pool-list
# virt-top
}

function infokvm {
  virsh list && virsh pool-list
  virsh pool-list && virsh vol-list default
# virt-top
}

#alias loc="sed '/^$/d' < mpa_sqltables.groovy | grep -v '//'|wc"
function loc {
  echo -n $1 ': '
  sed '/^$/d' < $1 | grep -v '//' | wc -l
}

function newusr {
  usr='hon'
  shell=/bin/bash
  if [[ $2 ]] ; then shell="$2" ; fi
  useradd -g users -m $usr
# useradd -g users -s $shell -m -d /home/$usr $usr 
# cp -p ~/{.login,.cshrc,.alias,.bash_aliases,.balias,.profile} /home/$1
  mkdir -p /home/$1/public_html 
  chown -R ${1}:users /home/$1 ; chmod -R a+rx /home/$1
}

function scp2ssvm {
  echo scp to cloudstack secondary storage VM on link-local address
  file=systemvm.zip && if [ $1 ] ; then file="$1" ; fi
  ip="169.254.1.214" && if [ $2 ] ; then ip="$2" ; fi
  scp -i /root/.ssh/id_rsa.cloud -P 3922 $file 169.254.1.214:/var/tmp
}

function portscan {
  netstat --tcp -alnp --numeric-ports
  nmap -T Aggressive -A -v localhost -p 1-65535
  nc -z localhost 1-65535
}

function gwcampus {
  echo set default gateway to uf campus subnet on br1 or cloudbr1 ...
  echo assume \(cloud\)br1 supports both eth1 and eth1.989  ...
  ifup cloudbr1 # ifup br1
  brctl addif eth1 cloudbr1 # br1
  route del default gw 10.101.8.1 br0
  route add default gw 10.13.80.1 cloudbr1 # br1
# ifup eth1 && ifup eth1.989
  ifup eth1.989
  brctl addif eth1.989 cloudbr1 # br1 
  ifconfig|egrep -A 1 'eth|br'
# ip a | grep inet
  brctl show
  netstat -rn
}

function gwicbr {
  echo set default gateway to icbr subnet on br0 ...
  route del default gw 10.13.80.1 cloudbr1 # br1
  route add default gw 10.101.8.1 br0
  ifdown eth1.989 >& /dev/null
  ifconfig|egrep -A 1 'eth|br'
# ip a | grep inet
  brctl show
  netstat -rn
}

function anyping {
  ip=`hostname -i`
  if [ $1 ] ; then ip="$1" ; fi
  d=`date "+%Y.%j.%H.%M.%S"`
  ipsave="/var/tmp/iptables.${d}" ; echo "preserve iptables to $ipsave"
  iptables-save > $ipsave
  if [ $? != 0 ] ; then echo failed to save iptabes, abort ... ; return ; fi
  iptables -P INPUT ACCEPT; iptables -P OUTPUT ACCEPT ; iptables -F INPUT; iptables -F OUTPUT
  \ping -c 1 -t 1 $ip
  iptables-restore < $ipsave
}

function sftp {
  /usr/bin/sftp -oIdentityFile=$1 $2
}

function git1 {
  if [ ! $1 ] ; then
    echo please provide clonable git URL ... abort.
    return
  fi
  echo clone $1
  git clone $1 --depth 1
}

function gitbr {
  if [ ! $1 ] ; then
    echo please provide branch name ... abort
    return
  fi
  git branch --set-upstream-to=origin/$1
  git pull
}

function nistime {
  nt=`nc time.nist.gov 13 < /dev/null 2>&1 | grep NIST | awk '{print $2, $3}'`
  echo "nist.time.gov: $nt"

  if [ "$nt" == "" ] ; then
    yy='yy' ; mm='mm' ; dd='dd' ; HH='HH' ; MM='MM' ; SS='SS'
  else
    yy=`echo $nt| cut -c 1,2` ; mm=`echo $nt| cut -c 4,5` ; dd=`echo $nt| cut -c 7,8`
    HH=`echo $nt| cut -c 10,11` ; MM=`echo $nt| cut -c 13,14` ; SS=`echo $nt| cut -c 16,17`
  fi

  ltu=`date -u '+%y-%m-%d %H:%M:%S'` ; lt=`date '+%y-%m-%d %H:%M:%S'`
  echo NIST time = $nt UTC ; echo Host time = $ltu UTC \($lt $host local timezone\)
  uid=`id | awk '{print $1}'` ; rid=`id root | awk '{print $1}'`

  if [ "$ltu" != "$nt" ] ; then
    if [ "$uid" != "$rid" ] ; then
      echo As root reset time via: date -u $mm$dd$HH$MM$yy.$SS
    else
      date -u $mm$dd$HH$MM$yy.$SS > /dev/null 2>&1
    fi
  fi
}

function pipuf {
  pkg='flask-socketio mapnik matplotlib scipy sqlalchemy'
  if [[ $1 ]] ; then pkg="$1" ; fi
  opt='search'
  if [[ $2 ]] ; then opt="$2" ; fi

  echo "pipuf> $opt $pkg"

  gwcampus
  if [ $? != 0 ] ; then echo sorry UF campus VLAN failed sartup ; return ; fi

  echo $opt $pkg
  for p in $pkg ; do 
    echo '------------------' $opt $p '------------------'
    pip $opt $p
  done

  gwicbr
}

function yumuf {
  pkg='flask-socketio mapnik matplotlib scipy sqlalchemy'
  if [[ $1 ]] ; then pkg="$1" ; fi
  opt='search'
  if [[ $2 ]] ; then opt="$2" ; fi

  echo "yumuf> $opt $pkg"

  gwcampus
  if [ $? != 0 ] ; then echo sorry UF campus VLAN failed sartup ; return ; fi

  echo $opt $pkg
  for p in $pkg ; do 
    echo '------------------' $opt $p '------------------'
    yum $opt $p
  done

  gwicbr
}

function systatus {
  \mount && \df -h
  sestatus $?
  ps -eZ | egrep 'mysqld|nfs|java|iptabl|qemu|virt'
  semanage boolean -l | egrep 'mysqld|nfs|java|iptabl|qemu|virt'
# seinfo -x /etc/selinux/targeted/policy/policy.24
  if [ $? == '-v' ] ; then
   auditctl -l
   seinfo -t
   semanage port -l
   iptables -L
   sysctl -a
  fi
}

function csmgmt {
  echo $1
  service cloudstack-management status
  if [ $1 == 'up' ] || [ $1 == 'strt' ] || [ $1 == 'start' ] ; then
    service cloudstack-management start
  fi
  if [ $1 == 'dn' ] || [ $1 == 'down' ] || [ $1 == 'stp' ] || [ $1 == 'stop' ] ; then
    service cloudstack-management stop
  fi
  service cloudstack-management status
}

function csagnt {
  echo $1
  service cloudstack-agent status
  if [ $1 == 'up' ] || [ $1 == 'strt' ] || [ $1 == 'start' ] ; then
    service cloudstack-agent start
  fi
  if [ $1 == 'dn' ] || [ $1 == 'down' ] || [ $1 == 'stp' ] || [ $1 == 'stop' ] ; then
    service cloudstack-agent stop
  fi
  service cloudstack-agent status
}

function showrtables {
  ip route show table main
  for rt in `grep cloud /etc/iproute2/rt_tables | awk '{print $1}'` ; do
    ip route show table $rt
  done
}

