# InfiniBand Communication Manager Assistant for clusters configuration file
#
# Use ib_acme utility with -O option to automatically generate a sample
# ibacm_opts.cfg file for the current system.
#
# Entry format is:
# name value

# log_file:
# Specifies the location of the ACM service output.  The log file is used to
# assist with ACM service debugging and troubleshooting.  The log_file can
# be set to 'stdout', 'stderr', or the name of a file.
# Examples:
# log_file stdout
# log_file stderr
# log_file /var/log/ibacm.log

log_file /var/log/ibacm.log

# log_level:
# Indicates the amount of detailed data written to the log file.  Log levels
# should be one of the following values:
# 0 - basic configuration & errors
# 1 - verbose configuration & errors
# 2 - verbose operation

log_level 0

# lock_file:
# Specifies the location of the ACM lock file used to ensure that only a
# single instance of ACM is running.

lock_file /run/ibacm.pid

# addr_prot:
# Default resolution protocol to resolve IP addresses into IB GIDs.
# Supported protocols are:
# acm - Use ACM multicast protocol, which is similar to ARP.

addr_prot acm

# addr_timeout:
# Number of minutes to maintain IP address to GID mapping before
# repeating address resolution.  A value of -1 indicates that the
# mapping will not time out.
# 1 hour = 60, 1 day = 1440, 1 week = 10080, 1 month ~ 43200
addr_timeout 1440

# route_prot:
# Default resolution protocol to resolve IB routing information.
# Supported protocols are:
# sa - Query SA for path record data and cache results.
# acm - Use ACM multicast protocol.

route_prot sa

# route_timeout:
# Number of minutes to maintain IB routing information before
# repeating route resolution.  A value of -1 indicates that the
# mapping will not time out.  However, the route will
# automatically time out when the address times out.
# 1 hour = 60, 1 day = 1440, 1 week = 10080, 1 month ~ 43200
route_timeout -1

# loopback_prot:
# Address and route resolution protocol to resolve local addresses
# Supported protocols are:
# none - Use same protocols defined for addr_prot and route_prot
# local - Resolve information used locally available data

loopback_prot local

# server_port:
# TCP port number that the server listens on.
# If this value is changed, then a corresponding change is required for
# client applications.

server_port 6125

# timeout:
# Additional time, in milliseconds, that the ACM service will wait for a
# response from a remote ACM service or the IB SA.  The actual request
# timeout is this value plus the subnet timeout.

timeout 2000

# retries:
# Number of times that the ACM service will retry a request.  This affects
# both ACM multicast messages and and IB SA messages.

retries 2

# resolve_depth:
# Specifies the maximum number of outstanding requests that can be in
# progress simultaneously.  A larger resolve depth allows for greater
# parallelism, but increases system resource usage and subnet load.
# If the number of pending requests is greater than the resolve_depth,
# the additional requests will automatically be queued until some of
# the previous requests complete.

resolve_depth 1

# sa_depth:
# Specifies the maximum number of outstanding requests to the SA that
# can be in progress simultaneously.  A larger SA depth allows for greater
# parallelism, but increases system resource usage and SA load.
# If the number of pending SA requests is greater than the sa_depth,
# the additional requests will automatically be queued until some of
# the previous requests complete.  The number of outstanding SA requests
# is separate from the specified resolve_depth.

sa_depth 1

# send_depth:
# Specifies the number of outstanding send operations that can
# be in progress simultaneously.  A larger send depth allows for
# greater parallelism, but consumes more system resources and subnet load.
# The send_depth is in addition to resolve_depth and sa_depth, and limits
# the transfer of responses.

send_depth 1

# recv_depth:
# Specifies the number of buffers allocated and ready to receive remote
# requests.  A larger receive depth consumes more system resources, but
# can avoid dropping requests due to insufficient receive buffers.

recv_depth 1024

# min_mtu:
# Indicates the minimum MTU supported by the ACM service.  The ACM service
# negotiates to use the largest MTU available between both sides of a
# connection.  It is most efficient and recommended that min_mtu be set
# to the largest MTU value supported by all nodes in a cluster.

min_mtu 2048

# min_rate:
# Indicates the minimum link rate, in Gbps, supported by the ACM service.
# The ACM service negotiates to use the highest rate available between both
# sides of a connection.  It is most efficient and recommended that the
# min_rate be set to the largest rate supported by all nodes in a cluster.

min_rate 10

# route_preload:
# Specifies if the ACM routing cache should be preloaded, or built on demand.
# If preloaded, indicates the method used to build the cache.
# Supported preload values are:
# none - The routing cache is not pre-built (default)
# opensm_full_v1 - OpenSM 'full' path records dump file format (version 1)

route_preload none

# route_data_file:
# Specifies the location of the route data file to use when preloading
# the ACM cache.  This option is only valid if route_preload
# indicates that routing data should be read from a file.
# Default is /etc/rdma/ibacm_route.data
# route_data_file /etc/rdma/ibacm_route.data

# addr_preload:
# Specifies if the ACM address cache should be preloaded, or built on demand.
# If preloaded, indicates the method used to build the cache.
# Supported preload values are:
# none - The address cache is not pre-built (default)
# acm_hosts - ACM address to GID file format

addr_preload none

# addr_data_file:
# Specifies the location of the address data file to use when preloading
# the ACM cache.  This option is only valid if addr_preload
# indicates that address data should be read from a file.
# Default is /etc/rdma/ibacm_hosts.data
# addr_data_file /etc/rdma/ibacm_hosts.data

# support_ips_in_addr_cfg:
# If 1 continue to read IP addresses from ibacm_addr.cfg
# Default is 0 "no"
# support_ips_in_addr_cfg 0

# provider_lib_path:
# Specifies the directory of the provider libraries

# provider_lib_path /usr/lib/ibacm

# provider:
# Specifies the provider to assign to each subnet
# ACM providers may override the address and route resolution
# protocols with provider specific protocols.
# provider name (prefix | default)
# Example:
# provider ibacmp 0xFE80000000000000
# provider ibacmp default

